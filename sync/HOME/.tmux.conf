#
# https://man.openbsd.org/OpenBSD-current/man1/tmux.1
#
# - server
#   - session
# 
# <== unix socket (tmp/xxx) ==>
#
# - client(attach to session)
#   - screen
#     - window(tab)
#       - pane(split)
#     - status
#
# ~/.tmux.conf
#
# set-option, set
#   -g is used to set global options 
#   -ga appends values to existing settings
# bind, bind-key

bind r source-file ~/.tmux.conf \; display "Reloaded!"
set -g default-terminal "tmux-256color"

set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

#
# prefix
#
unbind C-b
set -g prefix C-t
bind C-t send-prefix
set -sg escape-time 1
# set -g default-command "/usr/bin/zsh"

# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-. next-window
bind -n M-, previous-window
bind -n M-Left swap-window -t -1\; select-window -t -1 
bind -n M-Right swap-window -t +1\; select-window -t +1

#
# copy mode
#
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
if-shell -b '[[ "$(uname)" =~ "_NT" ]]' {
    # cygwin
    set set-clipboard off
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'cat > /dev/clipboard'
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'cat > /dev/clipboard'
    display "MSYS"
}
if-shell -b '[ "$(uname)" = "Linux" ]' {
    set -s copy-command "xsel --clipboard --input"
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xsel -bi'
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xsel -bi'
    display "Linux"
}

#
# title
#
set -g set-titles on
set -g set-titles-string "#S / #T"

#
# status line
#
# https://blog.black-cat.jp/2018/12/tmux-status-line/
# https://blog.untan.xyz/posts/2019-04-13-tmux-status-line-config/
set -g status-position top
set -g status-interval 60
set -g status-justify left
set -g status-fg white
set -g status-bg colour234

#
# windows status
#
set -g automatic-rename on
# setw -g window-status-current-fg red # アクティブなウィンドウを目立たせる
# setw -g window-status-current-format '#[bg=colour2]#[fg=colour255]#{?client_prefix,#[bg=colour3],} #I #W '
# setw -g window-status-format '#[fg=colour242] #I #W '
# setw -g window-status-format "#I:#W"
# setw -g window-status-current-format "#[fg=colour255,bg=colour27,bold]#I:#T#[default]"


# setw -g window-status-fg colour244
# setw -g window-status-bg colour234
# setw -g window-status-current-bg colour239
# setw -g window-status-current-attr bold
setw -g window-status-current-format '\
#[fg=colour239]#[bg=colour234]#[bg=colour239]#[fg=colour119]\
#[fg=colour255]#W#[fg=colour249]\
#[fg=colour239]#[bg=colour234]'

# setw -g window-status-attr none
 setw -g window-status-format ' #[fg=colour250]#W#[fg=colour244] '

#
# pane border status
#
set -g pane-border-status top
set -g pane-border-format "#[fg=black,bg=gray] #T #[fg=gray]#[bg=colour234]"
# set -g pane-border-fg colour023
# set -g pane-active-border-fg blue

#
# pane
#
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow
#set -g pane-border-fg colour023
#set -g pane-active-border-fg blue
#set -g pane-border-bg colour0
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour0
#set -g pane-active-border-fg colour119


#
# left
#
# set -g status-left-length 20
set -g status-left-length 120
# prefix keyが押されていたら色を反転，copy-modeに入ったら表示を変更
# set -g status-left "#[fg=colour108,bg=colour237,bold][#S:#I:#P] "
# ホスト名を表示，prefix keyが押されたらwhich-key的なヒントを表示，copy-modeに入ったらwhich-key的ヒントを表示
# #H: ホスト名
set -g status-left '#[default]#{?pane_in_mode, /: search  v: begin-selection  y: copy  q: cancel , #{?client_prefix, d: detach  [: copy-mode  ]: paste ,#(grep -oP "(?<=ID=)\w+" /etc/os-release) }}'

# set-option -g status-left  "\
# #[bg=colour148]#[fg=colour234] #S:#I.#P \
# #[bg=colour054]#[fg=colour255] #h \
# #[bg=colour024] #(~/dotfiles/tmux/ip.sh)\
# #[fg=colour024]#[bg=colour234]"
set -ga status-left '#{?pane_in_mode,#[fg=black bg=yellow] COPY ,#[fg=cyan bg=black]#{?client_prefix,#[reverse],} TMUX }'

#
# right
#
# set -g status-right-length 40
# set -g status-right "#[fg=colour255,bg=colour241] %m/%d %H:%M:%S#[default]"
# set -g status-right-length 120
# set -g status-right '[mem: #(tmux-status-mem)]' # メモリの容量と空き
# set -ga status-right ' [disk: #(tmux-status-disk)]' # /の容量と空き容量
# set -ga status-right ' [load: #(tmux-status-load)]' # load average
# set -ga status-right ' [%Y-%m-%d %H:%M]' # 日付・時刻
set-option -g status-right "\
#[fg=colour240]#[fg=colour255]#[bg=colour240]\
%d(%a)%H:%M"

#[fg=colour236]#[fg=colour253]#[bg=colour236]\
CPU:#{cpu_percentage} \
#[fg=colour238]#[fg=colour254]#[bg=colour238]\
Mem: #{mem_percentage}%%#[fg=colour254] \

# set -g focus-events on

# session の作成, 移動
# bind -n M-C new-session
# bind down switch-client -n
# bind up switch-client -p

# pane の分割
# bind -n M-v split-window -h -c "#{pane_current_path}"
# bind -n M-s split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ 
# | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
# bind -n C-l run  "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n C-\if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

