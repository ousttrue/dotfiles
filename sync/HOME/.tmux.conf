unbind C-b
set -g prefix C-t
bind C-t send-prefix

set set-clipboard off
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
if-shell -b '[[ "$(uname)" =~ "MINGW64_NT" ]]' {
    bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'cat > /dev/clipboard'
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'cat > /dev/clipboard'
}

# nvim
set -g focus-events on

set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# set -g default-terminal "screen-256color"
# set -sa terminal-overrides ",*256col*:RGB"
set -g default-terminal "tmux-256color"
# set -g default-shell "/usr/bin/fish"
#set -g default-shell "/bin/bash"
#set -g default-command "/bin/bash -i"
# set -g default-shell "~/local/bin/nyagos"

set -g set-titles on
set -g set-titles-string "#S / #T"

# session の作成, 移動
bind -n M-C new-session
bind down switch-client -n
bind up switch-client -p
# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-. next-window
bind -n M-, previous-window

# pane の分割
# bind -n M-v split-window -h -c "#{pane_current_path}"
# bind -n M-s split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ 
# | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
# bind -n C-l run  "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n C-\if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# status line
# set -g status-interval 1

# set -g status-left-length 20
# set -g status-left "#[fg=colour108,bg=colour237,bold][#S:#I:#P] "
# set -g status-right-length 40
# set -g status-right "#[fg=colour255,bg=colour241] %m/%d %H:%M:%S#[default]"
# set-window-option -g window-status-format "#I:#W"
# set-window-option -g window-status-current-format "#[fg=colour255,bg=colour27,bold]#I:#T#[default]"

# if "test -d ~/.local/lib/python3.10" "source ~/.local/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf"
# run-shell "powerline-daemon -q"

